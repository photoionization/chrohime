name: chrohime

on: push

jobs:
  build:
    runs-on: >-
      ${{
        (matrix.targetOs == 'linux' && matrix.config == 'Release') &&
          'ubuntu-latest-m' ||
          (fromJson('{"linux":"ubuntu-22.04","mac":"macos-13","win":"windows-2022"}')[matrix.targetOs])
      }}
    continue-on-error: false

    strategy:
      fail-fast: false
      matrix:
        targetOs: [linux, mac, win]
        targetCpu: [x64, arm64]
        config: [Component, Release]
        exclude:
          - config: ${{ startsWith(github.ref, 'refs/tags/') && 'Component' || 'Release' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-python@v3
        with:
          python-version: '3.11'

      - name: Install python dependencies
        run: python -m pip install pyyaml httplib2

      - name: Use XCode 15
        if: runner.os == 'macOS'
        run: |
          XCODE_APP=$(find /Applications -maxdepth 1 -type d -name "Xcode_15.*" -print -quit)
          echo 'Using' $XCODE_APP
          sudo xcode-select --switch $XCODE_APP

      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install gperf
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Bootstrap
        run: python3 scripts/bootstrap.py --target-cpu ${{ matrix.targetCpu }}

      - name: Setup GOMA
        shell: bash
        env:
          SECRET_FILE_CONTENT: ${{ secrets.GOMA_OAUTH2_CONFIG }}
        run: |
          printf "$SECRET_FILE_CONTENT" > ~/.goma_oauth2_config
          node scripts/build_chromium/goma.js

      - name: Build
        run: |
          python3 scripts/gn_gen.py --goma --config ${{ matrix.config }} --target-cpu ${{ matrix.targetCpu }}
          python3 scripts/build.py --config ${{ matrix.config }} chrohime_gallery chrohime_dylib chrohime_with_content_dylib
