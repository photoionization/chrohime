name: View
type: refcounted
inherit: Object
description: A View is a rectangle within the View hierarchy.

constructors:
  - name: Create
    description: Create a new View.

methods:
  - name: SetVisible
    description: Show/Hide the view.
    args:
      - name: visible
        type: bool

  - name: IsVisible
    description: Return whether the view is visible.
    returnType: bool

  - name: SetEnabled
    description: Set whether the view is enabled.
    args:
      - name: enabled
        type: bool

  - name: IsEnabled
    description: Return whether the view is enabled.
    returnType: bool

  - name: GetBounds
    description: Return the bounds of the view in its parent's coordinates.
    returnType: gfx::Rect

  - name: SetPreferredSize
    description: Sets or unsets the size that this View will request during layout.
    args:
      - name: size
        type: absl::optional<gfx::Size>

  - name: GetPreferredSize
    description: Return the size the view would like to be under the current bounds.
    returnType: gfx::Size

  - name: SetStyle
    description: &setstyle |
      Change the styles of the view.

      Note that calling this method does not changes the bounds immediately,
      the bounds will change when the view hierarchy re-calculates the layout,
      such as when resizing window or when adding/removing child views. To make
      the new styles apply immediately you can call `Layout` method.
    args:
      - name: name
        type: std::u16string_view
      - name: value
        type: std::u16string_view

  - name: SetNumberStyle
    description: *setstyle
    args:
      - name: name
        type: std::u16string_view
      - name: value
        type: float

  - name: Layout
    description: Re-calculate the layout in view hierarchy.

  - name: SetBackground
    description: Set the `background` of the view.
    args:
      - name: background
        type: Background

  - name: SetBorder
    description: |
      Set the `border` of the view.

      Note that it is also possible to set border via the `SetStyle` API, but
      it only serves as layout property rather than actually drawin a border,
      while the `SetBorder` API actually draws the border.

      The two types of borders do not know each other and setting both might
      cause weird visual effects, this will change in future and please be
      prepared for it.
    args:
      - name: border
        type: Border

  - name: AddChildView
    description: Append a child `view` to this view.
    args:
      - name: view
        type: View

  - name: AddChildViewAt
    description: Add a child `view` to this view at `index`.
    args:
      - name: view
        type: View
      - name: index
        type: size_t

  - name: RemoveChildView
    description: Remove a child `view` from this view.
    args:
      - name: view
        type: View

  - name: ChildCount
    description: Return the count of children in this view.
    returnType: size_t

  - name: ChildAt
    description: Return the child View at `index`.
    args:
      - name: index
        type: size_t
    returnType: View

  - name: SetAccessibleName
    description: |
      Set the accessible name.

      The value of the accessible name is a localized, end-user-consumable
      string which may be derived from visible information (e.g. the text on a
      button) or invisible information (e.g. the alternative text describing an
      icon). In the case of focusable objects, the name will be presented by
      the screen reader when that object gains focus and is critical to
      understanding the purpose of that object non-visually.
    args:
      - name: name
        type: std::u16string

  - name: GetAccessibleName
    description: Get the accessible name.
    returnType: const std::u16string&

  - name: SetGroup
    description: |
      Set the `group` id of this view.

      Some view subclasses use this id to find other views of the same group.
      For example radio button uses this information to find other radio
      buttons.
    args:
      - name: group
        type: int

  - name: GetGroup
    description: Get the group id of this view.
