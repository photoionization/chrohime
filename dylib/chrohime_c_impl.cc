// Copyright 2023 Microsoft, Inc
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "chrohime/chrohime.h"
#include "chrohime/dylib/chrohime_c_impl.inc"

namespace {

// A helper used by xx_on_event_connect implementations.
class DataHolder : public base::RefCounted<DataHolder> {
 public:
  REQUIRE_ADOPTION_FOR_REFCOUNTED_TYPE();

  DataHolder(void* data, hime_free_callback free) : data_(data), free_(free) {}

  void* data() const { return data_.get(); }

 private:
  friend class base::RefCounted<DataHolder>;

  ~DataHolder() {
    if (free_)
      free_(data_);
  }

  raw_ptr<void> data_;
  hime_free_callback free_;
};

// Make ToHimeVector happen to work with string array.
inline std::u16string ToHime(const char16_t** str) {
  return std::u16string(*str);
}

}  // namespace

// The actual implementations are automatically generated by generate_c_impls.py
#include "chrohime/dylib/generated_impls.h"
#include "chrohime/dylib/generated_impls.cc"
